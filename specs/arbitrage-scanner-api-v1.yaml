openapi: 3.0.3
info:
  title: Arbitrage Scanner API
  description: API сканера арбитража криптовалют
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
    description: Локальный сервер разработки

paths:
  /arbitrage-opportunities/read:
    post:
      tags:
        - ArbitrageOpportunities
      summary: Получить арбитражную возможность
      operationId: readArbitrageOpportunities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArbitrageOpportunityReadRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArbitrageOpportunityReadResponse'

  /arbitrage-opportunities/search:
    post:
      tags:
        - ArbitrageOpportunities
      summary: Получить список арбитражных возможностей по фильтру
      operationId: searchArbitrageOpportunities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArbitrageOpportunitySearchRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArbitrageOpportunitySearchResponse'

components:
  schemas:

    # COMMON SCHEMAS

    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: read
      discriminator:
        propertyName: requestType
        mapping:
          read: '#/components/schemas/ArbitrageOpportunityReadRequest'

    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      discriminator:
        propertyName: responseType
        mapping:
          read: '#/components/schemas/ArbitrageOpportunityReadResponse'

    ResponseResult:
      type: string
      enum:
        - success
        - error

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ArbitrageOpportunity:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ArbitrageOpportunityId'
        tokenPair:
          type: string
          description: Торговая пара для арбитража
        buyExchange:
          type: string
          description: Биржа для покупки
        sellExchange:
          type: string
          description: Биржа для продажи
        buyPrice:
          type: number
          format: double
          description: Цена покупки
        sellPrice:
          type: number
          format: double
          description: Цена продажи
        spread:
          $ref: '#/components/schemas/ArbitrageOpportunitySpread'
        status:
          $ref: '#/components/schemas/ArbitrageOpportunityStatus'

    ArbitrageOpportunityId:
      type: string
      description: Уникальный идентификатор арбитражной возможности
      example: "1893746293640137"

    ArbitrageOpportunityStatus:
      type: object
      description: Статус арбитражной возможности
      properties:
        statusType:
          $ref: '#/components/schemas/ArbitrageOpportunityStatusType'
        timestampStart:
          type: integer
          format: int64
        timestampEnd:
          type: integer
          format: int64

    ArbitrageOpportunityStatusType:
      type: string
      description: Тип статуса
      enum: [ active, expired ]

    ArbitrageOpportunitySpread:
      type: number
      description: Спред арбитражной возможности
      minimum: 0
      maximum: 100
      format: double

    ArbitrageOpportunitySearchFilter:
      type: object
      description: Фильтр для поиска арбитражных возможностей
      properties:
        id:
          $ref: '#/components/schemas/ArbitrageOpportunityId'
        tokenPair:
          type: string
          description: Торговая пара для арбитража
        spread:
          $ref: '#/components/schemas/ArbitrageOpportunitySpread'

    ArbitrageOpportunityMulti:
      allOf:
        - type: object
          description: Список найденных объектов
          properties:
            ads:
              type: array
              items:
                $ref: '#/components/schemas/ArbitrageOpportunity'

    # RESPONSES

    ArbitrageOpportunityReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/ArbitrageOpportunity'

    ArbitrageOpportunitySearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/ArbitrageOpportunityMulti'

    # REQUESTS
    ArbitrageOpportunityReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ArbitrageOpportunityId'

    ArbitrageOpportunitySearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            filter:
              $ref: '#/components/schemas/ArbitrageOpportunitySearchFilter'

tags:
  - name: ArbitrageOpportunities
    description: Операции, связанные с арбитражем криптовалют